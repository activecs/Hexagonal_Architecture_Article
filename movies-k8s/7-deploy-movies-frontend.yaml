apiVersion: v1
kind: ConfigMap
metadata:
  name: moviesfrontend
data:
  environment: local-movies
  service.app.port: "80"
  services.url.moviesbff: "http://moviesfrontend/bff"
  services.timeout.moviesbff: "12000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moviesfrontend
  labels:
    app: moviesfrontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moviesfrontend
  template:
    metadata:
      labels:
        app: moviesfrontend
        version: v1
    spec:
      containers:
        - name: moviesfrontend
          image: eder/moviesfrontend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: environment
              value: general-movies
            - name: APP_PORT
              valueFrom:
                configMapKeyRef:
                  name: moviesfrontend
                  key: service.app.port
            - name: VITE_API_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: moviesfrontend
                  key: services.url.moviesbff
            - name: VITE_API_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: moviesfrontend
                  key: services.timeout.moviesbff

---
apiVersion: v1
kind: Service
metadata:
  name: moviesfrontend
spec:
  type: ClusterIP
  selector:
    app: moviesfrontend
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: moviesfrontend
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
    - host: moviesfrontend
      http:
        paths:
          - path: /bff(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: moviesbff
                port:
                  number: 80
          - path: /()(.*)
            pathType: Prefix
            backend:
              service:
                name: moviesfrontend
                port:
                  number: 80